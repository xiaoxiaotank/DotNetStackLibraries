@{
    ViewBag.Title = "聊天";
}

<h2>Chat</h2>
<div class="container">
    <input type="button" id="get-exception" value="获取异常" />
    <input type="text" id="message" />
    <input type="button" id="send-message" value="Send" />
    <input type="hidden" id="display-name" />
    <ul id="discussion"></ul>
</div>
@section scripts {
    <!--注意：这里的jQuery脚本已经在模板页_Layout.cshtml中引用-->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--signalr自动生成的脚本-->
    <script src="~/signalr/hubs"></script>
    <script>
        $(function () {
            //$.connection.hub.url = "/signalr"; 指定hub的url,默认为“/signalr”
            //$.connection.hub.qs = {"version":"1.0"}; 设置http query string
            $.connection.hub.logging = true;

            //不使用代理
            //var connectionWithoutProxy = $.hubConnection("/signalr", { useDefaultPath: false });


            //声明hub代理
            var chat = $.connection.chatHub;

            //填充状态以在客户端与服务端之间传递
            chat.state.userName = "贾建军";
            chat.state.computerName = "PC";

            //创建后端要调用的前端function
            chat.client.addNewMessageToPage = function (name, message) {
                //将信息添加到页面上
                $('#discussion').append('<li><strong>' + htmlEncode(name) + '</strong>:' + htmlEncode(message) + '</li>');
            };
            //获取输入的名称
            $('#display-name').val(prompt('请输入昵称：', ''));
            //将焦点定位在信息输入框中
            $('#message').focus();
            //开启链接
            $.connection.hub.start().done(function () {
                $('#send-message').click(function () {
                    //调用后台hub的Send方法
                    chat.server.send($('#display-name').val(), $('#message').val());

                    //仅仅自己客户端获取数据
                    chat.server.send($('#message').val()).done(function (message) {
                        console.log(message);
                    })

                    chat.server.doLongRuningThing()
                        .progress(function (update) {
                            console.log("已完成:" + update + "%");
                        })
                        .done(function (msg) {
                            console.log(msg);
                        })

                    //清除发送的内容，并将焦点定位到信息框
                    $('#message').val('').focus();
                });

                chat.server.passStateWithClientAndServer().done(function () {
                    console.log(chat.state);
                    //alert(`userName: ${chat.state.userName}`);
                    //alert(`computerName:${chat.state.computerName}`);
                    //alert(`source:${chat.state.message}`);
                })

                $("#get-exception").click(function () {
                    chat.server.getHubException().fail(function (e) {
                        if (e.source == 'HubException') {
                            alert(`userName:${e.data.userName}\nmessage:${e.message}`);
                        }
                    })
                })
            });
            //该function防止JS注入
            function htmlEncode(value) {
                var encodeValue = $('<div/>').text(value).html();
                return encodeValue;
            }
        });
    </script>
}