<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPF.Login">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./CommonDic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <local:BitmapToImageSourceConverter x:Key="BitmapToImageSourceConverter" />

    <!--一定要在引用处的上方-->
    <Style TargetType="ToggleButton" x:Key="stlToggleButton">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Width" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Bg" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" CornerRadius="0 5 0 0">
                        <TextBlock  Padding="5 0" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image Name="TbOpen" Source="{Binding Path=Source,Converter={StaticResource BitmapToImageSourceConverter}}" />
                        </TextBlock>
                    </Border>
                        
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>-->
                            <Setter TargetName="Bg" Property="Background" Value="#c8c8c8"></Setter>
                            <Setter TargetName="Bg" Property="BorderBrush" Value="#ababab"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBoxItem" x:Key="ComboBoxItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <!--<Setter Property="BorderThickness" Value="0" />-->
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" Margin="0,0.5">
                        <Border x:Name="ItemBackground" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="#0877bf" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="LightGreen" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="UserComboBox" BasedOn="{StaticResource ResourceKey=UserText}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="ComboBox.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="PART_ContentHost" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5 5 0 0" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>

                                <!--主内容区域-->
                                <ContentPresenter x:Name="PART_SelectedItem" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}" />
                                <!--文本编辑区域-->
                                <TextBox x:Name="PART_EditableTextBox" Visibility="Collapsed" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"
                                    HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="True"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="Center"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}" IsReadOnly="{TemplateBinding IsReadOnly}" FontFamily="{TemplateBinding FontFamily}" 
                                    Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" FontSize="{TemplateBinding FontSize}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    BorderBrush="Transparent" BorderThickness="0" />
                                <!--下拉按钮-->
                                <ToggleButton x:Name="PART_DropDownToggle" Style="{StaticResource stlToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Grid.Column="2"></ToggleButton>
                            </Grid>
                        </Border>
                        <!--弹出框-->
                        <Popup x:Name="PART_Popup" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" Focusable="False" AllowsTransparency="True"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border x:Name="DropDown" CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True"
                                    Background="White" BorderBrush="#ababab" BorderThickness="1">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                </Border.Effect>
                                <ScrollViewer Margin="4,6" Style="{DynamicResource ScrollViewerStyle}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" 
                                              VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--开启编辑模式-->
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedItem" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainPanel">
        <Setter Property="StackPanel.Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,0.5">
                    <GradientStop  Offset="0" Color="#c7d2d5"></GradientStop>
                    <GradientStop  Offset="1" Color="White" ></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginGrid" TargetType="Grid">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Grid.Margin" Value="100,0"></Setter>
        <!--设置此可解决子元素受阴影导致的模糊问题-->
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
        <Setter Property="Grid.Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="15" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TbTitle" BasedOn="{StaticResource ResourceKey=UserText}">
        <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
        <Setter Property="TextBlock.Margin" Value="0 0 0 7" />
        <Setter Property="TextBlock.Foreground" Value="#2b2b2b" />
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#0877bf" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ResourceKey=UserBtn}">
        <Setter Property="Height" Value="32" />
        <Setter Property="Margin" Value="0,20,0,0" />
    </Style>

    <Style x:Key="DeleteBtn" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Bg" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" 
                                    Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}" 
                                    Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Border.Background" Value="Red" />
                            <Setter TargetName="Bg" Property="Border.Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Border.Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>